services:
  web-app:
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:14.6-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass


  redis:
    env_file:
      - .env
    image: redis:7.0.5-alpine
    hostname: redis


  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    env_file:
      - .env
    volumes:
      - .:/code
    links:
      - redis
    depends_on:
      - redis
      - db
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}


  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    env_file:
      - .env
    volumes:
      - .:/code
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"


volumes:
  postgres_data:
